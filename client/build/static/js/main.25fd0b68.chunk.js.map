{"version":3,"sources":["contexts/UserContext.js","components/hooks/useLocalStorage.js","components/Navbar.js","components/Footer.js","components/Landing.js","components/About.js","components/Contact.js","contexts/ToastContext.js","components/Login.js","components/Signup.js","components/AppNav.js","middleware/DashboardUtils.js","components/ProductSearch.js","components/AddPropModal.js","components/elements/DisplayColumn.js","components/elements/ButtonsColumn.js","components/elements/SelectWithToggleColumn.js","components/elements/EditColumn.js","components/elements/InputCost.js","components/elements/SelectColumn.js","components/elements/HeaderColumn.js","components/elements/ButtonAcceptColumn.js","middleware/TransactionUtils.js","components/Transactions.js","components/TransactionModal.js","components/elements/IsPerUnitCheck.js","middleware/ProductHasMaterialUtils.js","components/ProductHasMaterials.js","components/ProductProfile.js","components/Dashboard.js","middleware/SupplierUtils.js","components/ManagerSuppliers.js","middleware/MaterialUtils.js","components/ManagerMaterials.js","components/ManagerTransactions.js","components/ToastManager.js","index.js"],"names":["UserContext","React","createContext","URL_SERVER","process","useTokens","useContext","UserProvider","children","key","initialValue","useState","window","item","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","token","setToken","user","setUser","navigate","useNavigate","checkToken","a","_","isEmpty","fetch","method","headers","Authorization","Error","logOut","deleteSession","Provider","response","ok","json","res","message","Navbar","props","opacity","className","to","type","id","onClick","Footer","Landing","useEffect","About","Contact","ToastContext","useToasts","ToastProvider","toasts","setToasts","interval","setInterval","prevToasts","copyPrevToasts","shift","clearInterval","addToast","toast","Login","email","setEmail","password","setPassword","validateUser","body","accessToken","title","handleLogin","e","preventDefault","action","onSubmit","htmlFor","onChange","target","Signup","username","setUsername","confirm","setConfirm","newUser","handleAddUser","tabindex","for","style","cursor","AppNav","displayProduct","parseInt","addProduct","getProducts","deleteProduct","updatePrice","updateYield","ProductSearch","search","setSearch","setDisplayedProduct","products","setProductYield","setProductPrice","placeholder","filter","product","product_name","toLowerCase","includes","map","product_id","productData","yield","price","xmlns","width","height","fill","viewBox","fillRule","d","AddPropModal","itemType","handleAddItem","newItemName","newItemDescription","setNewItemName","setNewItemDescription","clearEntry","tabIndex","rows","DisplayColumn","display","content","ButtonsColumn","ID","handleDeleteResource","setRowToEdit","role","SelectWithToggleColumn","label","list","itemkey","newValue","setNewValue","currentState","modalID","disabled","EditColumn","min","step","maxlength","minlength","onBlur","maxLength","minLength","InputCost","setter","parseFloat","toFixed","SelectColumn","HeaderColumn","headerText","ButtonAcceptColumn","editHandler","resourceID","clearEdit","getTransactionData","deleteTransaction","transactionID","newTransaction","editTransaction","Transactions","units","handleAddTransactionForMaterial","handleDeleteTransaction","suppliers","transactionsForMaterial","transactionSupplier","setTransactionSupplier","transactionQuantity","setTransactionQuantity","transactionUnit","setTransactionUnit","transactionCost","setTransactionCost","transactionDate","setTransactionDate","modalMaterial","retrieveTransactionsForMaterial","rowToEdit","editTransactionMaterial","material_id","editTransactionSupplier","setEditTransactionSupplier","editTransactionUnit","setEditTransactionUnit","editTransactionQuantity","setEditTransactionQuantity","editTransactionCost","setEditTransactionCost","editTransactionDate","setEditTransactionDate","handleEditTransaction","transaction","transaction_id","supplier_name","quantity","unit_name","cost","dayjs","transaction_date","format","supplier_id","unit_id","TransactionModal","clearTransactionEntry","material_name","IsPerUnitCheck","isPerUnit","setIsPerUnit","checked","autoComplete","getMaterials","errorCode","getMaterialsForProduct","getTransactionsForMaterial","addMaterialToProduct","addTransactionForMaterial","getUnits","getSuppliers","deleteMaterialFromProduct","phmID","editProductHasMaterial","deleteTransactionFromMaterial","materialID","newMaterial","newSupplier","ProductHasMaterials","productID","productYield","setProductAverageCost","todayDate","Date","toISOString","split","materials","setMaterials","setUnits","setSuppliers","setTransactionsForMaterial","setModalMaterial","addMaterial","setAddMaterial","newUnit","setNewUnit","newQuantity","setNewQuantity","materialsForProduct","setMaterialsForProduct","editMaterial","setEditMaterial","editUnit","setEditUnit","editQuantity","setEditQuantity","editIsPerUnit","setEditIsPerUnit","newMaterialName","setNewMaterialName","newMaterialDescription","setNewMaterialDescription","newSupplierName","setNewSupplierName","array","retrieveMaterialsForProduct","handleAddMaterialToProduct","handleEditProductHasMaterial","handleNewMaterial","clearMaterialEntry","handleAddSupplier","handleDeleteMaterial","material","phm_id","loadLists","allMaterials","unitList","supplierList","asyncGet","batchCost","reduce","acc","is_per_unit","Number","avgcost","perUnitCost","calculatedCost","calculateProductCost","fontSize","ProductProfile","renderProducts","displayedProduct","updateProductYield","productPrice","updateProductPrice","productAverageCost","product_description","readOnly","isNaN","Dashboard","newProductName","setNewProductName","newProductDescription","setnewProductDescription","setProducts","productArray","handleAddProduct","deleteSupplier","supplierID","editSupplier","ManagerSuppliers","newSupplierContactName","setNewSupplierContactName","newSupplierPhone","setNewSupplierPhone","editSupplierName","setEditSupplierName","editSupplierContactName","setEditSupplierContactName","editSupplierPhone","setEditSupplierPhone","retrieveSuppliers","handleEditSupplier","handleDeleteSupplier","supplier","contact_name","supplier_phone","pattern","deleteMaterial","ManagerMaterials","editMaterialName","setEditMaterialName","editMaterialDescription","setEditMaterialDescription","handleEditMaterial","retrieveMaterials","handleAddMaterial","material_description","TransactionManager","transactions","setTransactions","newTransactionMaterial","setNewTransactionMaterial","newTransactionSupplier","setNewTransactionSupplier","newTransactionUnit","setNewTransactionUnit","newTransactionQuantity","setNewTransactionQuantity","newTransactionCost","setNewTransactionCost","newTransactionDate","setNewTransactionDate","setEditTransactionMaterial","materialList","retrieveTransactions","handleAddTransaction","clearNew","ToastManager","toastsToShow","setToastsToShow","ToastContainer","position","i","Toast","autohide","animation","Header","closeButton","Body","App","path","element","ManagerTransactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25fd0b68.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useLocalStorage } from \"../components/hooks/useLocalStorage\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UserContext = React.createContext();\r\nconst URL_SERVER = process.env.REACT_APP_URL;\r\n\r\nexport function useTokens() {\r\n  return useContext(UserContext);\r\n}\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [token, setToken] = useLocalStorage(\"token\", \"\");\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const checkToken = async () => {\r\n    if (!_.isEmpty(token)) {\r\n      try {\r\n        const response = await fetch(`${URL_SERVER}/tokentest`, {\r\n          method: \"GET\",\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (response !== 200) {\r\n          setToken(\"\");\r\n          navigate(\"/\");\r\n          throw new Error(\"You are not logged in\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        // throw new Error(\"Failed to check token\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const logOut = async () => {\r\n    try {\r\n      await deleteSession(token);\r\n    } catch (err) {}\r\n    setUser(\"\");\r\n    setToken(\"\");\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        token,\r\n        setToken,\r\n        user,\r\n        setUser,\r\n        logOut,\r\n        checkToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const deleteSession = async (token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/logout`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to sign out\");\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\n// Hook\r\nexport function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    if (typeof window === \"undefined\") {\r\n      return initialValue;\r\n    }\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.error(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      if (typeof window !== \"undefined\") {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.error(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"../styles/Navbar.css\";\r\nconst Navbar = (props) => {\r\n  const { opacity } = props;\r\n  const { token, logOut } = useTokens();\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar main-nav ${opacity} navbar-expand-lg navbar-dark p-md-3`}\r\n    >\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          <div className=\"box\">\r\n            <h3 className=\"white text-center\">m</h3>\r\n          </div>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <div className=\"mx-auto\"></div>\r\n          <ul className=\"navbar-nav\">\r\n            {!_.isEmpty(token) && (\r\n              <li className=\"nav-item me-0\">\r\n                <Link to=\"/dashboard\">\r\n                  <button className=\"btn btn-outline-light\">Dashboard</button>\r\n                </Link>\r\n              </li>\r\n            )}\r\n            {/* <li className=\"nav-item\">\r\n              <Link to=\"/contact\">\r\n                <button className=\"btn btn-outline-light\">Contact</button>\r\n              </Link>\r\n            </li> */}\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\">\r\n                <button className=\"btn btn-outline-light\">About</button>\r\n              </Link>\r\n            </li>\r\n            {_.isEmpty(token) ? (\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/Login\">\r\n                  <button className=\"btn btn-outline-light\">Log In</button>\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\">\r\n                  <button className=\"btn btn-outline-light\" onClick={logOut}>\r\n                    Log Out\r\n                  </button>\r\n                </Link>\r\n              </li>\r\n            )}\r\n            {_.isEmpty(token) && (\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/Signup\">\r\n                  <button className=\"btn btn-outline-light\">Sign Up</button>\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { React } from \"react\";\r\nimport \"../styles/Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container-fluid position-relative bottom-0 end-0 bg-none my-4 text-center\">\r\n      <div className=\"justify-between\">\r\n        <span className=\"mx-3\">©2023 Ben Dibuz</span>\r\n        <span className=\"mx-3\">ben.dibuz@gmail.com</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { React, Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport _ from \"lodash\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport \"../styles/Styles.css\";\r\nimport \"../styles/main.css\";\r\n\r\nimport { useTokens } from \"../contexts/UserContext\";\r\n\r\nconst Landing = () => {\r\n  const { checkToken, token } = useTokens();\r\n\r\n  useEffect(() => {\r\n    checkToken();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid background position-sticky\">\r\n        <Navbar opacity={\"opacity-50\"} />\r\n        {/* <div className=\"blurry\"></div> */}\r\n        {/* <nav className=\"navbar bg-transparent\">\r\n          <div className=\"container justify-content-end mt-4\">\r\n            <button className=\"btn btn-light me-md-2\" type=\"button\">\r\n              Log In\r\n            </button>\r\n            <button className=\"btn btn-outline-light\" type=\"button\">\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </nav> */}\r\n\r\n        <div className=\"container-fluid d-flex align-items-center hero position-fixed\">\r\n          <div className=\"container titlebox\">\r\n            <h1 className=\"title\">margerin</h1>\r\n            <h1 className=\"white display-6\">\r\n              Take the guesswork out of product costing\r\n            </h1>\r\n\r\n            {!_.isEmpty(token) ? (\r\n              <div className=\"\">\r\n                <div className=\"m-6 p-6\">\r\n                  <Link\r\n                    to=\"dashboard\"\r\n                    className=\"btn btn-lg btn-outline-light mt-2\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"\">\r\n                <span className=\"m-12 p-6 inline\">\r\n                  <Link\r\n                    to=\"signup\"\r\n                    className=\"btn btn-lg btn-outline-light mt-2\"\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                </span>\r\n\r\n                <span className=\"m-6 inline w-25\">\r\n                  <Link\r\n                    to=\"login\"\r\n                    className=\"btn btn-lg btn-outline-light mt-2 mx-3\"\r\n                  >\r\n                    Login\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container content\">\r\n        <h2>Lightweight and Affordable Tool for Small Businesses</h2>\r\n        <p>\r\n          <br />\r\n          Margerin is a featherweight ERP platform designed to track the cost of\r\n          materials from your various suppliers over time. With predictive\r\n          analytics, you can have a clearer idea of how much your products cost\r\n          to make, and what your real profit margins are.\r\n        </p>\r\n        <div className=\"row shadow rounded-3 my-5 bg-white\">\r\n          <div className=\"col-3 bg-white text-center p-3\">\r\n            <i className=\"bi bi-clipboard-data big-icon\"></i>\r\n            <p className=\"text-center\">Record material cost data</p>\r\n          </div>\r\n          <div className=\"col-9 my-auto p-4\">\r\n            <p>\r\n              As you record material purchase transaction data, Margerin shows\r\n              you the effects of changing costs from your suppliers over time on\r\n              your profit margins.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row shadow rounded my-5 bg-white\">\r\n          <div className=\"col-3 bg-white text-center p-3\">\r\n            <i className=\"bi bi-calculator big-icon\"></i>\r\n            <p className=\"text-center\">\r\n              Automatically calculate cost of goods sold\r\n            </p>\r\n          </div>\r\n          <div className=\"col-9 my-auto p-4\">\r\n            <p>\r\n              Margerin aggregates previous transactions and gives you the best\r\n              estimate of current real cost to produce a product or assembly.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row shadow rounded my-5 bg-white\">\r\n          <div className=\"col-3 bg-white text-center p-3\">\r\n            <i className=\"bi bi-cash-coin big-icon\"></i>\r\n            <p className=\"text-center\">Set prices with confidence</p>\r\n          </div>\r\n          <div className=\"col-9 my-auto p-4\">\r\n            <p>\r\n              Margerin helps you determine where your costs should be to\r\n              maintain profitability and set smart prices for different sales\r\n              channels.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { Fragment } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction About() {\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n\r\n      <div className=\"container-xxl mb-5\">\r\n        <div className=\"row shadow rounded-3 bg-white p-5 justify-content-center\">\r\n          <h1>About</h1>\r\n          <p>\r\n            The purpose of Margerin is to provide a better understanding of your\r\n            production costs. It uses data from your past transactions to\r\n            provide an accurate and up-to-date average product cost, and based\r\n            on your pricing, the profit per product.\r\n          </p>\r\n          <p>\r\n            Margerin is built on a model of products, materials, recipes,\r\n            transactions, and suppliers. For non-food projects, this can also be\r\n            understood as assemblies, materials, BOMs, transaction, and\r\n            suppliers.\r\n          </p>\r\n          <p>\r\n            Transaction data is aggregated over a recent timeframe to build the\r\n            product recipe cost. Because one recipe often makes multiple\r\n            products, a yield per recipe field is included that acts as the\r\n            divisor for the total cost.\r\n          </p>\r\n          <p>\r\n            The dashboard allows in-context editing of products, while the\r\n            material manager tabs allow you to quickly create/edit/delete\r\n            resources such as materials, transactions, and suppliers.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import { React, Fragment } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n      <div className=\"container\">\r\n        <div className=\"app-space\">\r\n          <h1>Contact</h1>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst ToastContext = React.createContext();\r\n\r\nexport function useToasts() {\r\n  return useContext(ToastContext);\r\n}\r\n\r\nexport const ToastProvider = ({ children }) => {\r\n  const [toasts, setToasts] = useState([]);\r\n\r\n  const toastTimeout = 2000;\r\n\r\n  const addToast = (toast) => {\r\n    setToasts((prevToasts) => [...prevToasts, toast]);\r\n  };\r\n\r\n  const removeToastFromStack = () => {\r\n    setToasts((prevToasts) => {\r\n      const copyPrevToasts = [...prevToasts];\r\n      copyPrevToasts.shift();\r\n      return copyPrevToasts;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (toasts && !_.isEmpty(toasts)) {\r\n        removeToastFromStack();\r\n      }\r\n    }, toastTimeout);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [toasts]);\r\n\r\n  return (\r\n    <ToastContext.Provider\r\n      value={{\r\n        toasts,\r\n        addToast,\r\n      }}\r\n    >\r\n      {children}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\n\r\n// import _ from \"lodash\";\r\n\r\nconst Login = () => {\r\n  const URL_SERVER = process.env.REACT_APP_URL;\r\n  const { addToast } = useToasts();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setToken, setUser } = useTokens();\r\n\r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  const validateUser = async (body) => {\r\n    try {\r\n      const response = await fetch(`${URL_SERVER}/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        throw new Error(res);\r\n      }\r\n      const res = await response.json();\r\n\r\n      setToken(res.accessToken);\r\n      setUser(res.user);\r\n\r\n      clearInputs();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Login successful\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Custom error\", error);\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const body = { email, password };\r\n      await validateUser(body);\r\n      return true;\r\n    } catch (error) {\r\n      throw new Error(\"login failure\");\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n      <div className=\"container-xxl mb-5\">\r\n        <div className=\"row shadow rounded-3 bg-white p-5 justify-content-center\">\r\n          <div className=\"col-lg-6 col-md-8 col-sm-10 col-12\">\r\n            <h1>Log In</h1>\r\n\r\n            <form\r\n              action=\"\"\r\n              onSubmit={(e) => {\r\n                handleLogin(e);\r\n                navigate(\"/dashboard\");\r\n              }}\r\n            >\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <div id=\"emailHelp\" className=\"form-text\">\r\n                  We'll never share your email with anyone else.\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"password\" className=\"form-label\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"d-grid gap-2 d-md-flex justify-content-center\">\r\n                <button className=\"btn btn-primary\">Log In</button>\r\n                <Link to=\"/Signup\">\r\n                  <button className=\"btn btn-outline-primary\">Sign Up</button>\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { React, useState, Fragment } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\n\r\nfunction Signup() {\r\n  const URL_SERVER = process.env.REACT_APP_URL;\r\n  const { addToast } = useToasts();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const { setToken } = useTokens();\r\n  const navigate = useNavigate();\r\n\r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setConfirm(\"\");\r\n  };\r\n\r\n  const newUser = async (body) => {\r\n    try {\r\n      const response = await fetch(`${URL_SERVER}/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        throw new Error(res);\r\n      }\r\n      clearInputs();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Registration successful\",\r\n      });\r\n      const res = await response.json();\r\n\r\n      setToken(res.token);\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      throw new Error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleAddUser = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      if (password === confirm) {\r\n        const body = { username, email, password };\r\n        await newUser(body);\r\n      } else {\r\n        throw new Error(\"Password and confirmation did not match!\");\r\n      }\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Registration Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n      <div className=\"modal fade \" id=\"strongpassword\" tabindex=\"-1\">\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">Password Requirements</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <ul>\r\n                <li>8+ Characters</li>\r\n                <li>Don't use something easy to guess like \"password123\"</li>\r\n                <li>\r\n                  Use at least one capital letter and one special character\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                OK, I get it!\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-xxl mb-5\">\r\n        <div className=\"row shadow rounded-3 bg-white p-5 justify-content-center\">\r\n          <div className=\"col-lg-6 col-md-8 col-sm-10 col-12\">\r\n            <h1>Sign Up</h1>\r\n            <form onSubmit={handleAddUser}>\r\n              <div className=\"mb-3\">\r\n                <label for=\"username\" className=\"form-label\">\r\n                  Project Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"username\"\r\n                  aria-describedby=\"usernameHelp\"\r\n                  value={username}\r\n                  onChange={(e) => {\r\n                    setUsername(e.target.value);\r\n                  }}\r\n                />\r\n                <div id=\"emailHelp\" className=\"form-text\">\r\n                  Project or personal name. You can change this later.\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label for=\"email\" className=\"form-label\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                />\r\n                <div id=\"emailHelp\" className=\"form-text\">\r\n                  We'll never share your email with anyone else.\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label for=\"password\" className=\"form-label\">\r\n                  Password\r\n                </label>\r\n\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n                <div\r\n                  id=\"password-reqs\"\r\n                  className=\"form-text\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#strongpassword\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Use a strong password\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label for=\"confirmpassword\" className=\"form-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"confirmpassword\"\r\n                  value={confirm}\r\n                  onChange={(e) => {\r\n                    setConfirm(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"d-grid gap-2 d-md-flex justify-content-center\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Sign Up\r\n                </button>\r\n                <Link to=\"/Login\">\r\n                  <button type=\"button\" className=\"btn btn-outline-primary\">\r\n                    Log In\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { useTokens } from \"../contexts/UserContext\";\r\n\r\nconst AppNav = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n          <div className=\"container-fluid \">\r\n            <div className=\"navbar-brand\">{}</div>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarNavAltMarkup\"\r\n              aria-controls=\"navbarNavAltMarkup\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div>\r\n              <div className=\"d-flex\">\r\n                <div className=\"\">\r\n                  <Link className=\"text-link\" to=\"/dashboard\">\r\n                    Dashboard\r\n                  </Link>\r\n                </div>\r\n                <div className=\"\">\r\n                  <Link className=\"text-link\" to=\"/suppliers\">\r\n                    Suppliers\r\n                  </Link>\r\n                </div>\r\n                <div className=\"\">\r\n                  <Link className=\"text-link\" to=\"/materials\">\r\n                    Materials\r\n                  </Link>\r\n                </div>\r\n                <div className=\"\">\r\n                  <Link className=\"text-link\" to=\"/transactions\">\r\n                    Transactions\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNav;\r\n","const URL_SERVER = process.env.REACT_APP_URL;\r\n\r\nexport const displayProduct = async (id, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/product/${id}`, {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    if (parseInt(err.message) === 401) {\r\n      throw new Error(err.message);\r\n    } else {\r\n      throw new Error(\"Failed to display product\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const addProduct = async (body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/product`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.json());\r\n    }\r\n  } catch (err) {\r\n    throw new Error(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const getProducts = async (token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/products`, {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.json());\r\n    }\r\n    const res = await response.json();\r\n    return res;\r\n  } catch (err) {\r\n    if (parseInt(err.message) === 401) {\r\n      throw new Error(err.message);\r\n    } else {\r\n      throw new Error(\"Failed to get products\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/product/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to delete product\");\r\n  }\r\n};\r\n\r\nexport const updatePrice = async (id, body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/product/price/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to update price\");\r\n  }\r\n};\r\n\r\nexport const updateYield = async (id, body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/product/yield/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to update yield\");\r\n  }\r\n};\r\n","import { displayProduct } from \"../middleware/DashboardUtils\";\r\nimport { React, useState } from \"react\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const ProductSearch = (props) => {\r\n  const { addToast } = useToasts();\r\n  const { token, logOut } = useTokens();\r\n  const [search, setSearch] = useState(\"\");\r\n  const { setDisplayedProduct, products, setProductYield, setProductPrice } =\r\n    props;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-3 border-end\">\r\n      <div className=\"row my-4 \">\r\n        <div className=\"col-12  align-self-center\">\r\n          <div className=\"input-group\">\r\n            <span className=\"input-group-text\" id=\"basic-addon1\">\r\n              <i className=\"bi bi-search\"></i>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search products...\"\r\n              aria-label=\"Search products...\"\r\n              aria-describedby=\"search-products\"\r\n              value={search}\r\n              onChange={(e) => {\r\n                setSearch(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row  mx-0 limit-y\">\r\n        <div className=\"row my-1 d-grid g-0 mx-0\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#newProductModal\"\r\n          >\r\n            Add New Product\r\n          </button>\r\n        </div>\r\n        {/* --------------------------- Render Product List -------------------------- */}\r\n\r\n        {products &&\r\n          products\r\n            .filter((product) =>\r\n              product.product_name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n            .map((product) => (\r\n              <div className=\"row my-1 d-grid g-0\" key={product.product_id}>\r\n                <button\r\n                  className=\"btn btn-outline-primary\"\r\n                  onClick={async () => {\r\n                    try {\r\n                      const productData = await displayProduct(\r\n                        product.product_id,\r\n                        token\r\n                      );\r\n                      setDisplayedProduct(productData);\r\n                      setProductYield(productData.yield);\r\n                      setProductPrice(productData.price);\r\n                      setSearch(\"\");\r\n                    } catch (error) {\r\n                      if (error.message === \"401\") {\r\n                        logOut();\r\n                        navigate(\"/\");\r\n                      }\r\n                      addToast({\r\n                        title: \" Database Error\",\r\n                        type: \"Error\",\r\n                        body: error.message,\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-10 text-start\">\r\n                      {product.product_name}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-arrow-right-circle\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n            ))}\r\n        {/* ----------------------------- End Render List ---------------------------- */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSearch;\r\n","const AddPropModal = (props) => {\r\n  const itemType = props.itemType;\r\n  const handleAddItem = props.handleAddItem;\r\n  const newItemName = props.newItemName;\r\n  const newItemDescription = props.newItemDescription;\r\n  const setNewItemName = props.setNewItemName;\r\n  const setNewItemDescription = props.setNewItemDescription;\r\n  const clearEntry = props.clearEntry;\r\n\r\n  return (\r\n    <div className=\"modal fade\" tabIndex=\"-1\" id={`new${itemType}Modal`}>\r\n      <div className=\"modal-dialog modal-dialog-centered\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Add New {itemType}</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              onClick={() => clearEntry()}\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form action=\"\" onSubmit={handleAddItem}>\r\n              <label htmlFor=\"productName\" className=\"form-label\">\r\n                {itemType} Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"productName\"\r\n                value={newItemName}\r\n                onChange={(e) => setNewItemName(e.target.value)}\r\n              />\r\n              {itemType !== \"Supplier\" && (\r\n                <>\r\n                  <label htmlFor=\"productDescription\" className=\"form-label\">\r\n                    {itemType} Description\r\n                  </label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    rows=\"3\"\r\n                    className=\"form-control\"\r\n                    id=\"productDescription\"\r\n                    value={newItemDescription}\r\n                    onChange={(e) => setNewItemDescription(e.target.value)}\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  onClick={() => clearEntry()}\r\n                >\r\n                  Close\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  // onClick={() => clearEntry()}\r\n                >\r\n                  Add {itemType}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPropModal;\r\n","const DisplayColumn = (props) => {\r\n  const { display, content } = props;\r\n  return (\r\n    <div className={display}>\r\n      <p className=\"\">{content}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayColumn;\r\n","const ButtonsColumn = (props) => {\r\n  const { display, ID, handleDeleteResource, setRowToEdit } = props;\r\n  return (\r\n    <div className={display}>\r\n      <div className=\"btn-group\" role=\"group\" aria-label=\"update delete\">\r\n        <button\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={() => setRowToEdit(ID)}\r\n        >\r\n          <i className=\"bi bi-pencil-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-danger\"\r\n          onClick={() => {\r\n            handleDeleteResource(ID);\r\n          }}\r\n        >\r\n          <i className=\"bi bi-trash-fill\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonsColumn;\r\n","import { useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst SelectWithToggleColumn = (props) => {\r\n  const {\r\n    display,\r\n    label,\r\n    list,\r\n    itemkey,\r\n    newValue,\r\n    setNewValue,\r\n    currentState,\r\n    id,\r\n    modalID,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    setNewValue(() => currentState);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={display}>\r\n      <div className=\"input-group\">\r\n        <select\r\n          className=\"form-select\"\r\n          aria-label={label}\r\n          value={newValue}\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n        >\r\n          <option disabled value=\"\">\r\n            {label}...\r\n          </option>\r\n          {!_.isEmpty(list) &&\r\n            list.map((item) => {\r\n              return (\r\n                <option value={item[id]} key={item[id]}>\r\n                  {item[itemkey]}\r\n                </option>\r\n              );\r\n            })}\r\n        </select>\r\n        <button\r\n          className=\"btn btn-outline-secondary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target={modalID}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectWithToggleColumn;\r\n","import { useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst EditColumn = (props) => {\r\n  const {\r\n    display,\r\n    type,\r\n    label,\r\n    newValue,\r\n    setNewValue,\r\n    placeholder,\r\n    min,\r\n    step,\r\n    maxlength,\r\n    minlength,\r\n    currentState,\r\n    onBlur,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    !_.isEmpty(currentState) && setNewValue(currentState);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={display}>\r\n      <input\r\n        type={type}\r\n        className=\"form-control user-select-all\"\r\n        placeholder={placeholder}\r\n        aria-label={label}\r\n        value={newValue}\r\n        maxLength={maxlength}\r\n        minLength={minlength}\r\n        min={min}\r\n        step={step}\r\n        onChange={(e) => {\r\n          // if (e.nativeEvent.data.match(/^[A-Za-z0-9\\s]+$/)) {\r\n          setNewValue(e.target.value);\r\n          // }\r\n        }}\r\n        onBlur={onBlur}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditColumn;\r\n","import _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst InputCost = (props) => {\r\n  const { display, value, setter, currentState } = props;\r\n  useEffect(() => {\r\n    !_.isEmpty(currentState) && setter(currentState);\r\n  });\r\n\r\n  return (\r\n    <div className={display}>\r\n      <div className=\"input-group\">\r\n        <span className=\"input-group-text\">$</span>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control user-select-all\"\r\n          placeholder=\"0.00\"\r\n          aria-label=\"cost\"\r\n          step=\"0.01\"\r\n          min=\"0\"\r\n          value={value}\r\n          onChange={(e) => {\r\n            setter(e.target.value);\r\n          }}\r\n          onBlur={() => setter(parseFloat(value).toFixed(2))}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputCost;\r\n","import { useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst SelectColumn = (props) => {\r\n  const {\r\n    display,\r\n    label,\r\n    list,\r\n    itemkey,\r\n    newValue,\r\n    setNewValue,\r\n    currentState,\r\n    id,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    setNewValue(currentState);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={display}>\r\n      <select\r\n        className=\"form-select\"\r\n        aria-label={label}\r\n        value={newValue}\r\n        onChange={(e) => {\r\n          setNewValue(e.target.value);\r\n        }}\r\n      >\r\n        {!_.isEmpty(list) &&\r\n          list.map((item) => {\r\n            return (\r\n              <option value={item[id]} key={item[id]}>\r\n                {item[itemkey]}\r\n              </option>\r\n            );\r\n          })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectColumn;\r\n","const HeaderColumn = (props) => {\r\n  const { display, headerText } = props;\r\n  return (\r\n    <div className={display}>\r\n      <h6 className=\"text-center\">{headerText}</h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderColumn;\r\n","const ButtonAcceptColumn = (props) => {\r\n  const { display, editHandler, resourceID, setRowToEdit, clearEdit } = props;\r\n  return (\r\n    <div className={display}>\r\n      <button\r\n        className=\"btn btn-outline-secondary\"\r\n        onClick={() => {\r\n          editHandler(resourceID);\r\n          setRowToEdit(\"\");\r\n          clearEdit();\r\n        }}\r\n      >\r\n        <i className=\"bi bi-check-lg\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonAcceptColumn;\r\n","const URL_SERVER = process.env.REACT_APP_URL;\r\n\r\nexport const getTransactionData = async (token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/transaction`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to get transaction data\");\r\n  }\r\n};\r\n\r\nexport const deleteTransaction = async (transactionID, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/transaction/${transactionID}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to delete transaction\");\r\n  }\r\n};\r\n\r\nexport const newTransaction = async (body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/transaction`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Something went wrong!\");\r\n  }\r\n};\r\n\r\nexport const editTransaction = async (transactionID, body, token) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${URL_SERVER}/transaction/edit/${transactionID}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to load units\");\r\n  }\r\n};\r\n","import { React, Fragment, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport DisplayColumn from \"./elements/DisplayColumn\";\r\nimport ButtonsColumn from \"./elements/ButtonsColumn\";\r\nimport SelectWithToggleColumn from \"./elements/SelectWithToggleColumn\";\r\nimport EditColumn from \"./elements/EditColumn\";\r\nimport InputCost from \"./elements/InputCost\";\r\nimport SelectColumn from \"./elements/SelectColumn\";\r\nimport HeaderColumn from \"./elements/HeaderColumn\";\r\nimport dayjs from \"dayjs\";\r\nimport ButtonAcceptColumn from \"./elements/ButtonAcceptColumn\";\r\nimport { editTransaction } from \"../middleware/TransactionUtils\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\n\r\nconst Transactions = (props) => {\r\n  const {\r\n    units,\r\n    handleAddTransactionForMaterial,\r\n    handleDeleteTransaction,\r\n    suppliers,\r\n    transactionsForMaterial,\r\n    transactionSupplier,\r\n    setTransactionSupplier,\r\n    transactionQuantity,\r\n    setTransactionQuantity,\r\n    transactionUnit,\r\n    setTransactionUnit,\r\n    transactionCost,\r\n    setTransactionCost,\r\n    transactionDate,\r\n    setTransactionDate,\r\n    modalMaterial,\r\n    retrieveTransactionsForMaterial,\r\n  } = props;\r\n\r\n  const { addToast } = useToasts();\r\n  const [rowToEdit, setRowToEdit] = useState(\"\");\r\n  const editTransactionMaterial = modalMaterial.material_id;\r\n  const [editTransactionSupplier, setEditTransactionSupplier] = useState(\"\");\r\n  const [editTransactionUnit, setEditTransactionUnit] = useState(\"\");\r\n  const [editTransactionQuantity, setEditTransactionQuantity] = useState(\"\");\r\n  const [editTransactionCost, setEditTransactionCost] = useState(\"\");\r\n  const [editTransactionDate, setEditTransactionDate] = useState(\"\");\r\n\r\n  const clearEdit = () => {\r\n    setEditTransactionCost(\"\");\r\n    setEditTransactionDate(\"\");\r\n    setEditTransactionQuantity(\"\");\r\n    setEditTransactionSupplier(\"\");\r\n    setEditTransactionUnit(\"\");\r\n  };\r\n\r\n  const handleEditTransaction = async (id) => {\r\n    try {\r\n      const body = {\r\n        editTransactionMaterial,\r\n        editTransactionSupplier,\r\n        editTransactionUnit,\r\n        editTransactionCost,\r\n        editTransactionQuantity,\r\n        editTransactionDate,\r\n      };\r\n      await editTransaction(id, body);\r\n      await retrieveTransactionsForMaterial();\r\n      clearEdit();\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row row-cols-6 gx-1\">\r\n        <HeaderColumn display={\"col-3\"} headerText={\"Supplier\"} />\r\n        <HeaderColumn display={\"col-1\"} headerText={\"Quantity\"} />\r\n        <HeaderColumn display={\"col-2\"} headerText={\"Unit\"} />\r\n        <HeaderColumn display={\"col-2\"} headerText={\"Total Cost\"} />\r\n        <HeaderColumn display={\"col-2\"} headerText={\"Transaction Date\"} />\r\n        <HeaderColumn display={\"col-2\"} headerText={\"\"} />\r\n      </div>\r\n\r\n      <div className=\"row row-cols-6 border-bottom py-2 mb-2 gx-1\">\r\n        {/* --------------------------------- Inputs --------------------------------- */}\r\n        {/* -------------------------------- Supplier -------------------------------- */}\r\n\r\n        <SelectWithToggleColumn\r\n          display={\"col-3\"}\r\n          label={\"Supplier\"}\r\n          list={suppliers}\r\n          itemkey={\"supplier_name\"}\r\n          id={\"supplier_id\"}\r\n          newValue={transactionSupplier}\r\n          setNewValue={setTransactionSupplier}\r\n          modalID={\"#newSupplierModal\"}\r\n        />\r\n\r\n        {/* -------------------------------- Quantity -------------------------------- */}\r\n        <EditColumn\r\n          display={\"col-1\"}\r\n          type={\"number\"}\r\n          label={\"Quantity\"}\r\n          min={0}\r\n          newValue={transactionQuantity}\r\n          setNewValue={setTransactionQuantity}\r\n          placeholder={\"0\"}\r\n        />\r\n\r\n        {/* ---------------------------------- Unit ---------------------------------- */}\r\n        <SelectColumn\r\n          display={\"col-2\"}\r\n          // id={\"selectUnit\"}\r\n          label={\"Unit\"}\r\n          list={units}\r\n          itemkey={\"unit_name\"}\r\n          id={\"unit_id\"}\r\n          currentState={1}\r\n          newValue={transactionUnit}\r\n          setNewValue={setTransactionUnit}\r\n        />\r\n        {/* ---------------------------------- Cost ---------------------------------- */}\r\n        <InputCost\r\n          display={\"col-2\"}\r\n          value={transactionCost}\r\n          setter={setTransactionCost}\r\n        />\r\n\r\n        {/* ---------------------------------- Date ---------------------------------- */}\r\n        <EditColumn\r\n          display={\"col-2\"}\r\n          type={\"date\"}\r\n          label={\"Date\"}\r\n          newValue={transactionDate}\r\n          setNewValue={setTransactionDate}\r\n          placeholder={\"Transaction Date\"}\r\n        />\r\n\r\n        {/* --------------------------------- Buttons -------------------------------- */}\r\n\r\n        <div className=\"col-2 d-grid\">\r\n          <button\r\n            className=\"btn btn-mary\"\r\n            onClick={() => handleAddTransactionForMaterial()}\r\n          >\r\n            Add Transaction\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* --------------------------- Enumerated Existing -------------------------- */}\r\n      {!_.isEmpty(transactionsForMaterial) &&\r\n        transactionsForMaterial.map((transaction) => {\r\n          return transaction.transaction_id !== rowToEdit ? (\r\n            <div\r\n              className=\"row row-cols-6 border-bottom py-2 mb-2 gx-0\"\r\n              key={transaction.transaction_id}\r\n            >\r\n              <DisplayColumn\r\n                display={\"col-3 text-center\"}\r\n                content={transaction.supplier_name}\r\n              />\r\n              <DisplayColumn\r\n                display={\"col-1 text-center\"}\r\n                content={transaction.quantity}\r\n              />\r\n              <DisplayColumn\r\n                display={\"col-2 text-center\"}\r\n                content={transaction.unit_name}\r\n              />\r\n              <DisplayColumn\r\n                display={\"col-2 text-center\"}\r\n                content={transaction.cost}\r\n              />\r\n              <DisplayColumn\r\n                display={\"col-2 text-center\"}\r\n                content={dayjs(transaction.transaction_date).format(\r\n                  \"MMM D, YYYY\"\r\n                )}\r\n              />\r\n              <ButtonsColumn\r\n                display={\"col-2 d-grid\"}\r\n                ID={transaction.transaction_id}\r\n                handleDeleteResource={handleDeleteTransaction}\r\n                setRowToEdit={setRowToEdit}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"row row-cols-6 border-bottom py-2 mb-2 gx-1\">\r\n              <SelectWithToggleColumn\r\n                display={\"col-3\"}\r\n                label={\"Supplier\"}\r\n                list={suppliers}\r\n                itemkey={\"supplier_name\"}\r\n                id={\"supplier_id\"}\r\n                currentState={transaction.supplier_id}\r\n                newValue={editTransactionSupplier}\r\n                setNewValue={setEditTransactionSupplier}\r\n                modalID={\"#newSupplierModal\"}\r\n              />\r\n\r\n              <EditColumn\r\n                display={\"col-1\"}\r\n                type={\"number\"}\r\n                label={\"Quantity\"}\r\n                min={0}\r\n                currentState={transaction.quantity}\r\n                newValue={editTransactionQuantity}\r\n                setNewValue={setEditTransactionQuantity}\r\n                placeholder={\"0\"}\r\n              />\r\n\r\n              <SelectColumn\r\n                display={\"col-2\"}\r\n                label={\"Unit\"}\r\n                list={units}\r\n                itemkey={\"unit_name\"}\r\n                id={\"unit_id\"}\r\n                currentState={transaction.unit_id}\r\n                newValue={editTransactionUnit}\r\n                setNewValue={setEditTransactionUnit}\r\n              />\r\n\r\n              <InputCost\r\n                display={\"col-2\"}\r\n                currentState={transaction.cost}\r\n                value={editTransactionCost}\r\n                setter={setEditTransactionCost}\r\n              />\r\n\r\n              <EditColumn\r\n                display={\"col-2\"}\r\n                type={\"date\"}\r\n                label={\"Date\"}\r\n                currentState={dayjs(transaction.transaction_date).format(\r\n                  \"YYYY-MM-DD\"\r\n                )}\r\n                newValue={editTransactionDate}\r\n                setNewValue={setEditTransactionDate}\r\n                placeholder={\"Transaction Date\"}\r\n              />\r\n\r\n              <ButtonAcceptColumn\r\n                display={\"col-2 d-grid\"}\r\n                editHandler={handleEditTransaction}\r\n                resourceID={transaction.transaction_id}\r\n                setRowToEdit={setRowToEdit}\r\n                clearEdit={clearEdit}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import React from \"react\";\r\n// import { useTokens } from \"../contexts/UserContext\";\r\nimport Transactions from \"./Transactions\";\r\n\r\nconst TransactionModal = (props) => {\r\n  const { modalMaterial, clearTransactionEntry } = props;\r\n\r\n  return (\r\n    <div className=\"modal fade\" tabIndex=\"-1\" id=\"materialTransactionModal\">\r\n      <div className=\"modal-dialog modal-xl modal-dialog-centered\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">\r\n              Recent Transactions for {modalMaterial.material_name}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              onClick={() => clearTransactionEntry()}\r\n            ></button>\r\n          </div>\r\n\r\n          <div className=\"modal-body\">\r\n            <Transactions {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionModal;\r\n","import { useEffect } from \"react\";\r\n// import _ from \"lodash\";\r\n\r\nconst IsPerUnitCheck = (props) => {\r\n  const { id, currentState, isPerUnit, setIsPerUnit } = props;\r\n\r\n  useEffect(() => {\r\n    setIsPerUnit(() => currentState);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-1 text-center\">\r\n      <input\r\n        checked={isPerUnit ? true : false}\r\n        type=\"checkbox\"\r\n        className=\"btn-check\"\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        value={isPerUnit}\r\n        onChange={() => {\r\n          setIsPerUnit((isPerUnit) => !isPerUnit);\r\n        }}\r\n      />\r\n      <label className=\"btn btn-outline-secondary\" htmlFor={id}>\r\n        {isPerUnit ? <i className=\"bi bi-check\"></i> : \"--\"}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IsPerUnitCheck;\r\n","const URL_SERVER = process.env.REACT_APP_URL;\r\n\r\nexport const getMaterials = async (token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/materials`, {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(err.errorCode);\r\n  }\r\n};\r\n\r\nexport const getMaterialsForProduct = async (id, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/productHasMaterials/${id}`, {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to get materials\");\r\n  }\r\n};\r\n\r\nexport const getTransactionsForMaterial = async (id, token) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${URL_SERVER}/materialHasTransactions/${id}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to get transactions for material\");\r\n  }\r\n};\r\n\r\nexport const addMaterialToProduct = async (body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/productHasMaterial`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json(); //is this really needed? Try skipping this\r\n      throw new Error(res.message);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to add material to product\");\r\n  }\r\n};\r\n\r\nexport const addTransactionForMaterial = async (body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/materialHasTransaction`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to add transaction\");\r\n  }\r\n};\r\n\r\nexport const getUnits = async (token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/units`, {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to load units\");\r\n  }\r\n};\r\n\r\nexport const getSuppliers = async (token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/suppliers`, {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n    return response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to load suppliers\");\r\n  }\r\n};\r\n\r\nexport const deleteMaterialFromProduct = async (phmID, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/productHasMaterial/${phmID}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw new Error(\"Failed to remove material from product\");\r\n  }\r\n};\r\n\r\nexport const editProductHasMaterial = async (phmID, body, token) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${URL_SERVER}/productHasMaterial/edit/${phmID}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.errorCode);\r\n  }\r\n};\r\n\r\nexport const deleteTransactionFromMaterial = async (\r\n  materialID,\r\n  transactionID,\r\n  token\r\n) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${URL_SERVER}/materialHasTransaction/${materialID}/${transactionID}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.errorCode);\r\n  }\r\n};\r\n\r\nexport const newMaterial = async (body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/material`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.errorCode);\r\n  }\r\n};\r\n\r\nexport const newSupplier = async (body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/supplier`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      const res = await response.json();\r\n      throw new Error(res.message);\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.errorCode);\r\n  }\r\n};\r\n","import { React, Fragment, useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport AddPropModal from \"./AddPropModal\";\r\nimport TransactionModal from \"./TransactionModal\";\r\nimport DisplayColumn from \"./elements/DisplayColumn\";\r\nimport ButtonAcceptColumn from \"./elements/ButtonAcceptColumn\";\r\nimport ButtonsColumn from \"./elements/ButtonsColumn\";\r\nimport EditColumn from \"./elements/EditColumn\";\r\nimport SelectColumn from \"./elements/SelectColumn\";\r\nimport HeaderColumn from \"./elements/HeaderColumn\";\r\nimport SelectWithToggleColumn from \"./elements/SelectWithToggleColumn\";\r\nimport IsPerUnitCheck from \"./elements/IsPerUnitCheck\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\n\r\nimport {\r\n  getMaterials,\r\n  getMaterialsForProduct,\r\n  addMaterialToProduct,\r\n  addTransactionForMaterial,\r\n  deleteMaterialFromProduct,\r\n  deleteTransactionFromMaterial,\r\n  getUnits,\r\n  getSuppliers,\r\n  newMaterial,\r\n  newSupplier,\r\n  getTransactionsForMaterial,\r\n  editProductHasMaterial,\r\n} from \"../middleware/ProductHasMaterialUtils\";\r\n\r\nconst ProductHasMaterials = (props) => {\r\n  //General Purpose\r\n\r\n  const { token } = useTokens();\r\n  const { addToast } = useToasts();\r\n  const productID = props.productID;\r\n  const productYield = props.productYield;\r\n  const setProductAverageCost = props.setProductAverageCost;\r\n  const todayDate = new Date().toISOString().split(\"T\")[0];\r\n\r\n  const [materials, setMaterials] = useState([]);\r\n  const [units, setUnits] = useState([]);\r\n\r\n  //Transaction Modal States\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [transactionsForMaterial, setTransactionsForMaterial] = useState([]);\r\n  const [modalMaterial, setModalMaterial] = useState({});\r\n  const [transactionSupplier, setTransactionSupplier] = useState(\"\");\r\n  const [transactionUnit, setTransactionUnit] = useState(\"1\");\r\n  const [transactionCost, setTransactionCost] = useState(\"0.00\");\r\n  const [transactionQuantity, setTransactionQuantity] = useState(\"0\");\r\n  const [transactionDate, setTransactionDate] = useState(todayDate);\r\n\r\n  //Product has materials\r\n  const [addMaterial, setAddMaterial] = useState(\"\");\r\n  const [newUnit, setNewUnit] = useState(\"1\");\r\n  const [newQuantity, setNewQuantity] = useState(\"0\");\r\n  const [isPerUnit, setIsPerUnit] = useState(false);\r\n  const [materialsForProduct, setMaterialsForProduct] = useState([]);\r\n\r\n  //Edit materials for product\r\n  const [editMaterial, setEditMaterial] = useState(\"\");\r\n  const [editUnit, setEditUnit] = useState(\"1\");\r\n  const [editQuantity, setEditQuantity] = useState(\"0\");\r\n  const [editIsPerUnit, setEditIsPerUnit] = useState(false);\r\n\r\n  //Create new material\r\n  const [newMaterialName, setNewMaterialName] = useState([]);\r\n  const [newMaterialDescription, setNewMaterialDescription] = useState([]);\r\n\r\n  const [newSupplierName, setNewSupplierName] = useState([]);\r\n  const [rowToEdit, setRowToEdit] = useState(\"\");\r\n\r\n  /* --------------------------- Transaction Methods -------------------------- */\r\n  const retrieveTransactionsForMaterial = async () => {\r\n    if (_.isEmpty(modalMaterial)) return;\r\n    const array = await getTransactionsForMaterial(\r\n      modalMaterial.material_id,\r\n      token\r\n    );\r\n    setTransactionsForMaterial(array);\r\n  };\r\n\r\n  const handleAddTransactionForMaterial = async () => {\r\n    try {\r\n      let materialID = modalMaterial.material_id;\r\n      const body = {\r\n        transactionSupplier,\r\n        materialID,\r\n        transactionUnit,\r\n        transactionCost,\r\n        transactionQuantity,\r\n        transactionDate,\r\n      };\r\n      await addTransactionForMaterial(body, token);\r\n      await retrieveTransactionsForMaterial();\r\n      await retrieveMaterialsForProduct();\r\n      clearTransactionEntry();\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteTransaction = async (transactionID) => {\r\n    const materialID = modalMaterial.material_id;\r\n    await deleteTransactionFromMaterial(materialID, transactionID, token);\r\n    setTransactionsForMaterial(\r\n      transactionsForMaterial.filter(\r\n        (transaction) => transaction.transaction_id !== transactionID\r\n      )\r\n    );\r\n    retrieveMaterialsForProduct();\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveTransactionsForMaterial();\r\n  }, [modalMaterial]);\r\n\r\n  /* ---------------------------- Material Methods ---------------------------- */\r\n\r\n  const handleAddMaterialToProduct = async () => {\r\n    try {\r\n      const body = { productID, addMaterial, newUnit, newQuantity, isPerUnit };\r\n      await addMaterialToProduct(body, token);\r\n      const response = await getMaterialsForProduct(productID, token);\r\n      setMaterialsForProduct(response);\r\n      setAddMaterial(\"\");\r\n      setNewUnit(\"1\");\r\n      setNewQuantity(\"0\");\r\n      addToast({\r\n        title: \"\",\r\n        type: \"Success\",\r\n        body: \"Material added\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditProductHasMaterial = async (phmID) => {\r\n    try {\r\n      const body = { editMaterial, editQuantity, editUnit, editIsPerUnit };\r\n      await editProductHasMaterial(phmID, body, token);\r\n      retrieveMaterialsForProduct();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Product updated\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearEdit = () => {\r\n    setEditMaterial(\"\");\r\n    setEditQuantity(\"\");\r\n    setEditUnit(\"\");\r\n    setEditIsPerUnit(false);\r\n  };\r\n\r\n  const handleNewMaterial = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { newMaterialName, newMaterialDescription };\r\n      await newMaterial(body, token);\r\n      const materials = await getMaterials(token);\r\n      setMaterials(materials);\r\n      clearMaterialEntry();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Material added\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddSupplier = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { newSupplierName };\r\n      await newSupplier(body, token);\r\n      const suppliers = await getSuppliers(token);\r\n      setSuppliers(suppliers);\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Supplier added\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteMaterial = async (phmID) => {\r\n    try {\r\n      await deleteMaterialFromProduct(phmID, token);\r\n      setMaterialsForProduct(\r\n        materialsForProduct.filter((material) => material.phm_id !== phmID)\r\n      );\r\n      retrieveMaterialsForProduct();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Material deleted\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearMaterialEntry = () => {\r\n    setNewMaterialName(\"\");\r\n    setNewMaterialDescription(\"\");\r\n    setModalMaterial({});\r\n  };\r\n\r\n  const clearTransactionEntry = () => {\r\n    setTransactionSupplier(\"\");\r\n    setTransactionUnit(\"1\");\r\n    setTransactionCost(\"0.00\");\r\n    setTransactionQuantity(\"0\");\r\n    setTransactionDate(todayDate);\r\n  };\r\n\r\n  const clearSupplierEntry = () => {\r\n    setNewSupplierName(\"\");\r\n  };\r\n\r\n  const loadLists = async () => {\r\n    try {\r\n      const allMaterials = await getMaterials(token);\r\n      const unitList = await getUnits(token);\r\n      const supplierList = await getSuppliers(token);\r\n      setMaterials(allMaterials);\r\n      setUnits(unitList);\r\n      setSuppliers(supplierList);\r\n    } catch (error) {\r\n      console.error(error);\r\n      addToast({\r\n        title: `Error`,\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const calculateProductCost = () => {\r\n    if (_.isEmpty(materialsForProduct)) {\r\n      setProductAverageCost(\"No Cost Data\");\r\n      return;\r\n    }\r\n\r\n    const batchAccumulator = (acc, material) => {\r\n      if (material.is_per_unit === false) {\r\n        return acc + Number(material.avgcost) * material.quantity;\r\n      } else return acc;\r\n    };\r\n\r\n    const perUnitAccumulator = (acc, material) => {\r\n      if (material.is_per_unit === true) {\r\n        return acc + Number(material.avgcost) * material.quantity;\r\n      } else return acc;\r\n    };\r\n\r\n    const batchCost = parseFloat(\r\n      materialsForProduct.reduce(batchAccumulator, 0)\r\n    ).toFixed(2);\r\n\r\n    const perUnitCost = parseFloat(\r\n      materialsForProduct.reduce(perUnitAccumulator, 0)\r\n    ).toFixed(2);\r\n\r\n    const calculatedCost = parseFloat(\r\n      Number(batchCost) / Number(productYield) + Number(perUnitCost)\r\n    ).toFixed(2);\r\n\r\n    setProductAverageCost(calculatedCost);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLists();\r\n  }, []);\r\n\r\n  const retrieveMaterialsForProduct = async () => {\r\n    const array = await getMaterialsForProduct(productID, token);\r\n    setMaterialsForProduct([...array]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const asyncGet = async () => {\r\n      await retrieveMaterialsForProduct();\r\n    };\r\n    asyncGet();\r\n  }, [productID]);\r\n\r\n  useEffect(() => {\r\n    calculateProductCost();\r\n  }, [materialsForProduct, productYield]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* ---------------------------- Transaction Modal --------------------------- */}\r\n\r\n      <TransactionModal\r\n        units={units}\r\n        clearTransactionEntry={clearTransactionEntry}\r\n        handleAddTransactionForMaterial={handleAddTransactionForMaterial}\r\n        handleDeleteTransaction={handleDeleteTransaction}\r\n        modalMaterial={modalMaterial}\r\n        suppliers={suppliers}\r\n        transactionsForMaterial={transactionsForMaterial}\r\n        transactionSupplier={transactionSupplier}\r\n        setTransactionSupplier={setTransactionSupplier}\r\n        transactionQuantity={transactionQuantity}\r\n        setTransactionQuantity={setTransactionQuantity}\r\n        transactionUnit={transactionUnit}\r\n        setTransactionUnit={setTransactionUnit}\r\n        transactionCost={transactionCost}\r\n        setTransactionCost={setTransactionCost}\r\n        transactionDate={transactionDate}\r\n        setTransactionDate={setTransactionDate}\r\n        retrieveTransactionsForMaterial={retrieveTransactionsForMaterial}\r\n      />\r\n\r\n      <AddPropModal\r\n        itemType=\"Material\"\r\n        handleAddItem={handleNewMaterial}\r\n        newItemName={newMaterialName}\r\n        newItemDescription={newMaterialDescription}\r\n        setNewItemName={setNewMaterialName}\r\n        setNewItemDescription={setNewMaterialDescription}\r\n        clearEntry={clearMaterialEntry}\r\n      />\r\n\r\n      <AddPropModal\r\n        itemType=\"Supplier\"\r\n        handleAddItem={handleAddSupplier}\r\n        newItemName={newSupplierName}\r\n        setNewItemName={setNewSupplierName}\r\n        clearEntry={clearSupplierEntry}\r\n      />\r\n\r\n      <div className=\"row mx-auto pt-2 gx-0\">\r\n        <div className=\"row row-cols-6 pt-3 mx-auto gx-1 \">\r\n          <HeaderColumn display={\"col-3\"} headerText={\"Material\"} />\r\n          <HeaderColumn display={\"col-2\"} headerText={\"Quantity\"} />\r\n          <HeaderColumn display={\"col-2\"} headerText={\"Unit\"} />\r\n          <HeaderColumn display={\"col-1\"} headerText={\"Per Unit\"} />\r\n          <HeaderColumn display={\"col-2\"} headerText={\"Cost\"} />\r\n          <HeaderColumn display={\"col-2\"} headerText={\"\"} />\r\n        </div>\r\n\r\n        <div className=\"row row-cols-6 pt-3 mx-auto gx-1 shadow-sm mb-2\">\r\n          <SelectWithToggleColumn\r\n            display={\"col-3\"}\r\n            label={\"Material\"}\r\n            list={materials}\r\n            itemkey={\"material_name\"}\r\n            newValue={addMaterial}\r\n            setNewValue={setAddMaterial}\r\n            id={\"material_id\"}\r\n            modalID={\"#newMaterialModal\"}\r\n          />\r\n          <EditColumn\r\n            display={\"col-2\"}\r\n            type={\"number\"}\r\n            label={\"Quantity\"}\r\n            newValue={newQuantity}\r\n            setNewValue={setNewQuantity}\r\n            placeholder={\"0\"}\r\n            min={0}\r\n            step={1}\r\n          />\r\n          <SelectColumn\r\n            display={\"col-2\"}\r\n            label={\"Units\"}\r\n            list={units}\r\n            itemkey={\"unit_name\"}\r\n            id={\"unit_id\"}\r\n            currentState={1}\r\n            newValue={newUnit}\r\n            setNewValue={setNewUnit}\r\n          />\r\n\r\n          <IsPerUnitCheck\r\n            id={\"new-ipu-check\"}\r\n            currentState={false}\r\n            isPerUnit={isPerUnit}\r\n            setIsPerUnit={setIsPerUnit}\r\n          />\r\n\r\n          {/* Cost */}\r\n          <div className=\"col-2 text-center text-muted mx-auto \">\r\n            <p className=\"py-1 mx-auto\">\r\n              <i\r\n                className=\"bi bi-currency-dollar\"\r\n                style={{ fontSize: \"1.2rem\" }}\r\n              ></i>\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"col-2 text-center d-grid pb-4\">\r\n            <button\r\n              className=\"btn btn-outline-primary\"\r\n              onClick={() => handleAddMaterialToProduct()}\r\n            >\r\n              Add Material\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* --------------------------- Enumerated Existing -------------------------- */}\r\n        {!_.isEmpty(materialsForProduct) &&\r\n          materialsForProduct.map((material) => {\r\n            return material.phm_id !== rowToEdit ? (\r\n              <div\r\n                className=\"row row-cols-6 border-bottom py-1 mx-auto gx-1 highlight\"\r\n                key={material.phm_id}\r\n              >\r\n                <DisplayColumn\r\n                  display={\"col-3 text-center \"}\r\n                  content={material.material_name}\r\n                />\r\n                <DisplayColumn\r\n                  display={\"col-2 text-center \"}\r\n                  content={material.quantity}\r\n                />\r\n                <DisplayColumn\r\n                  display={\"col-2 text-center\"}\r\n                  content={material.unit_name}\r\n                />\r\n                <DisplayColumn\r\n                  display={\"col-1 text-center\"}\r\n                  content={material.is_per_unit ? \"Yes\" : \"No\"}\r\n                />\r\n\r\n                <div className=\"col-2 d-grid  text-center \">\r\n                  <button\r\n                    key=\"displayAverageCost\"\r\n                    className={\r\n                      material.avgcost\r\n                        ? `btn btn-outline-success`\r\n                        : `btn btn-outline-secondary`\r\n                    }\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#materialTransactionModal\"\r\n                    onClick={() => {\r\n                      setModalMaterial(material);\r\n                    }}\r\n                  >\r\n                    {material.avgcost\r\n                      ? `$${parseFloat(\r\n                          material.avgcost * material.quantity\r\n                        ).toFixed(2)}`\r\n                      : \"$ --.--\"}{\" \"}\r\n                    <i className=\"bi bi-pencil-square\"></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <ButtonsColumn\r\n                  display={\"col-2 d-grid\"}\r\n                  ID={material.phm_id}\r\n                  handleDeleteResource={handleDeleteMaterial}\r\n                  setRowToEdit={setRowToEdit}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"row row-cols-6 border-bottom py-1 mx-auto gx-1\">\r\n                <SelectWithToggleColumn\r\n                  display={\"col-3\"}\r\n                  label={\"Material\"}\r\n                  list={materials}\r\n                  itemkey={\"material_name\"}\r\n                  currentState={material.material_id}\r\n                  newValue={editMaterial}\r\n                  setNewValue={setEditMaterial}\r\n                  id={\"material_id\"}\r\n                  modalID={\"#newMaterialModal\"}\r\n                />\r\n                <EditColumn\r\n                  display={\"col-2\"}\r\n                  type={\"number\"}\r\n                  label={\"Quantity\"}\r\n                  currentState={material.quantity}\r\n                  newValue={editQuantity}\r\n                  setNewValue={setEditQuantity}\r\n                  placeholder={\"0\"}\r\n                  min={0}\r\n                  step={1}\r\n                />\r\n                <SelectColumn\r\n                  display={\"col-2\"}\r\n                  label={\"Units\"}\r\n                  list={units}\r\n                  itemkey={\"unit_name\"}\r\n                  currentState={material.unit_id}\r\n                  newValue={editUnit}\r\n                  setNewValue={setEditUnit}\r\n                  id={\"unit_id\"}\r\n                />\r\n\r\n                <IsPerUnitCheck\r\n                  id={material.phm_id}\r\n                  currentState={material.is_per_unit}\r\n                  isPerUnit={editIsPerUnit}\r\n                  setIsPerUnit={setEditIsPerUnit}\r\n                />\r\n\r\n                <DisplayColumn\r\n                  display={\"text-muted text-center\"}\r\n                  content={\r\n                    material.avgcost\r\n                      ? `$${parseFloat(\r\n                          material.avgcost * material.quantity\r\n                        ).toFixed(2)}`\r\n                      : \"$ --.--\"\r\n                  }\r\n                />\r\n\r\n                <ButtonAcceptColumn\r\n                  display={\"col-2 d-grid\"}\r\n                  editHandler={handleEditProductHasMaterial}\r\n                  resourceID={material.phm_id}\r\n                  setRowToEdit={setRowToEdit}\r\n                  clearEdit={clearEdit}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductHasMaterials;\r\n","import React, { Fragment } from \"react\";\r\nimport _ from \"lodash\";\r\nimport ProductHasMaterials from \"./ProductHasMaterials\";\r\n// import { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\n\r\nconst ProductProfile = (props) => {\r\n  const { token } = useTokens();\r\n  const {\r\n    renderProducts,\r\n    deleteProduct,\r\n    displayedProduct,\r\n    productYield,\r\n    setProductYield,\r\n    updateProductYield,\r\n    productPrice,\r\n    setProductPrice,\r\n    updateProductPrice,\r\n    productAverageCost,\r\n    setProductAverageCost,\r\n  } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"col-12 col-md-9 p-4 gx-5\">\r\n        <div className=\"row mb-5 shadow-sm p-4 rounded-3 \">\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <div className=\"btn-group\">\r\n              <button className=\"btn btn-outline-primary\" type=\"button\">\r\n                Edit <i className=\"bi bi-pencil-square\"></i>\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-danger\"\r\n                type=\"button\"\r\n                onClick={async () => {\r\n                  await deleteProduct(displayedProduct.product_id, token);\r\n                  renderProducts();\r\n                }}\r\n              >\r\n                Delete <i className=\"bi bi-trash-fill\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-3 pic-col\">\r\n                <div className=\"square-image mx-auto\">\r\n                  <img src=\"/assets/mango.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                </div>\r\n                <div className=\"row p-4 gy-2\"></div>\r\n              </div> */}\r\n          <div className=\"col\">\r\n            {!_.isEmpty(displayedProduct) && (\r\n              <div className=\"row\">\r\n                <h1>{displayedProduct.product_name}</h1>\r\n                <p>{displayedProduct.product_description}</p>\r\n              </div>\r\n            )}\r\n            <h3>Cost Data</h3>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-3 col-sm-6\">\r\n                <label\r\n                  htmlFor=\"exampleFormControlInput1\"\r\n                  className=\"form-label\"\r\n                >\r\n                  Yield Per Recipe\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">#</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control text-center\"\r\n                    id=\"YPR\"\r\n                    value={productYield}\r\n                    onChange={(e) => {\r\n                      setProductYield(e.target.value);\r\n                      updateProductPrice();\r\n                    }}\r\n                    onBlur={updateProductYield}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-3 col-sm-6\">\r\n                <label htmlFor=\"\" className=\"form-label\">\r\n                  Cost Per Unit\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">$</span>\r\n                  <input\r\n                    className=\"form-control text-center \"\r\n                    type=\"text\"\r\n                    value={productAverageCost}\r\n                    aria-label=\"Product Unit Cost\"\r\n                    readOnly\r\n                    id=\"ProductCost\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-3 col-sm-6\">\r\n                <label\r\n                  htmlFor=\"exampleFormControlInput1\"\r\n                  className=\"form-label\"\r\n                >\r\n                  Sales Price\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">$</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control text-center\"\r\n                    id=\"salesPrice\"\r\n                    step=\"0.01\"\r\n                    placeholder=\"0.00\"\r\n                    value={productPrice}\r\n                    onChange={(e) => setProductPrice(e.target.value)}\r\n                    onBlur={() => {\r\n                      setProductPrice(parseFloat(productPrice).toFixed(2));\r\n                      updateProductPrice();\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-3 col-sm-6\">\r\n                <label htmlFor=\"\" className=\"form-label\">\r\n                  Profit Per Unit\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <span\r\n                    className={`input-group-text ${\r\n                      productPrice - productAverageCost > 0\r\n                        ? `bg-success`\r\n                        : `bg-warning`\r\n                    }`}\r\n                  >\r\n                    $\r\n                  </span>\r\n                  <input\r\n                    className=\"form-control text-center\"\r\n                    type=\"text\"\r\n                    // value={`$${}`}\r\n                    aria-label=\"Product Unit Cost\"\r\n                    readOnly\r\n                    id=\"ProductCost\"\r\n                    value={\r\n                      !isNaN(productAverageCost)\r\n                        ? parseFloat(productPrice - productAverageCost).toFixed(\r\n                            2\r\n                          )\r\n                        : \"No Data\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col\"></div>\r\n              <div className=\"col\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!_.isEmpty(displayedProduct) && (\r\n          <ProductHasMaterials\r\n            productID={displayedProduct.product_id}\r\n            setProductAverageCost={setProductAverageCost}\r\n            productYield={productYield}\r\n          />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductProfile;\r\n","import { React, Fragment, useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport AppNav from \"./AppNav\";\r\nimport ProductSearch from \"./ProductSearch\";\r\nimport AddPropModal from \"./AddPropModal\";\r\nimport ProductProfile from \"./ProductProfile\";\r\nimport {\r\n  addProduct,\r\n  getProducts,\r\n  deleteProduct,\r\n  updatePrice,\r\n  updateYield,\r\n} from \"../middleware/DashboardUtils\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const { token, logOut } = useTokens();\r\n  const { addToast } = useToasts();\r\n  const [displayedProduct, setDisplayedProduct] = useState({});\r\n  const [newProductName, setNewProductName] = useState(\"\");\r\n  const [productYield, setProductYield] = useState(\"\");\r\n  const [newProductDescription, setnewProductDescription] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productAverageCost, setProductAverageCost] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  /* ------------------------------ List Products ----------------------------- */\r\n\r\n  //How to trigger rendering?\r\n  const renderProducts = async () => {\r\n    try {\r\n      const productArray = await getProducts(token);\r\n      if (_.isEmpty(productArray)) return; //Maybe?\r\n      setProducts(productArray);\r\n      setDisplayedProduct(productArray[0]);\r\n      setProductYield(productArray[0].yield);\r\n      setProductPrice(productArray[0].price);\r\n    } catch (error) {\r\n      if (error.message === \"401\") {\r\n        logOut();\r\n        navigate(\"/\");\r\n      }\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(token)) {\r\n      renderProducts();\r\n    }\r\n  }, [token]);\r\n\r\n  /* ------------------------------- Add Product ------------------------------ */\r\n  const handleAddProduct = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const body = { newProductName, newProductDescription };\r\n      await addProduct(body, token);\r\n      clearEntry();\r\n      renderProducts();\r\n      addToast({\r\n        title: `${newProductName} added!`,\r\n        type: \"Success\",\r\n        body: \"Successfully added product\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearEntry = () => {\r\n    setNewProductName(\"\");\r\n    setnewProductDescription(\"\");\r\n  };\r\n\r\n  const updateProductYield = async () => {\r\n    try {\r\n      const productID = displayedProduct.product_id;\r\n      const body = { productYield };\r\n      await updateYield(productID, body, token);\r\n    } catch (error) {\r\n      addToast({\r\n        title: \"Database error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateProductPrice = async () => {\r\n    try {\r\n      const productID = displayedProduct.product_id;\r\n      const body = { productPrice };\r\n      await updatePrice(productID, body, token);\r\n    } catch (error) {\r\n      addToast({\r\n        title: \"Database error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n      <AddPropModal\r\n        itemType=\"Product\"\r\n        handleAddItem={handleAddProduct}\r\n        newItemName={newProductName}\r\n        newItemDescription={newProductDescription}\r\n        setNewItemName={setNewProductName}\r\n        setNewItemDescription={setnewProductDescription}\r\n        clearEntry={clearEntry}\r\n      />\r\n      {/* TODO: Add method to clear NPN and NPD when clicking outside Modal*/}\r\n\r\n      {/* <div className=\"navbar-clearance\"></div> */}\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <AppNav></AppNav>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-xxl mb-5\">\r\n        <div className=\"row shadow rounded-3 bg-white\">\r\n          <ProductSearch\r\n            setDisplayedProduct={setDisplayedProduct}\r\n            products={products}\r\n            setProductYield={setProductYield}\r\n            setProductPrice={setProductPrice}\r\n          />\r\n\r\n          <ProductProfile\r\n            renderProducts={renderProducts}\r\n            deleteProduct={deleteProduct}\r\n            displayedProduct={displayedProduct}\r\n            productYield={productYield}\r\n            setProductYield={setProductYield}\r\n            updateProductYield={updateProductYield}\r\n            productPrice={productPrice}\r\n            setProductPrice={setProductPrice}\r\n            updateProductPrice={updateProductPrice}\r\n            productAverageCost={productAverageCost}\r\n            setProductAverageCost={setProductAverageCost}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"footer\"></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","const URL_SERVER = process.env.REACT_APP_URL;\r\n\r\nexport const deleteSupplier = async (supplierID, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/supplier/${supplierID}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(response.json());\r\n    }\r\n  } catch (err) {\r\n    if ((err.errorCode = \"23503\")) {\r\n      throw new Error(\r\n        \"Could not delete the supplier because it is referenced in an existing transaction\"\r\n      );\r\n    } else {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const getSuppliers = async (token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/suppliers`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(response.json());\r\n    }\r\n    const res = await response.json();\r\n    return res;\r\n  } catch (err) {\r\n    throw new Error(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const newSupplier = async (body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/supplier/new`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(response.json());\r\n    }\r\n  } catch (err) {\r\n    // console.error(\"err contents\", err);\r\n    throw new Error(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const editSupplier = async (supplierID, body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/supplier/edit/${supplierID}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(response.json());\r\n    }\r\n  } catch (err) {\r\n    throw new Error(err.errorCode);\r\n  }\r\n};\r\n","import { React, Fragment, useState, useEffect } from \"react\";\r\nimport AppNav from \"./AppNav\";\r\nimport HeaderColumn from \"./elements/HeaderColumn\";\r\nimport DisplayColumn from \"./elements/DisplayColumn\";\r\nimport ButtonsColumn from \"./elements/ButtonsColumn\";\r\nimport EditColumn from \"./elements/EditColumn\";\r\nimport ButtonAcceptColumn from \"./elements/ButtonAcceptColumn\";\r\nimport { getSuppliers } from \"../middleware/ProductHasMaterialUtils\";\r\nimport Navbar from \"./Navbar\";\r\nimport {\r\n  deleteSupplier,\r\n  newSupplier,\r\n  editSupplier,\r\n} from \"../middleware/SupplierUtils\";\r\nimport _ from \"lodash\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\n\r\nconst ManagerSuppliers = () => {\r\n  const { token } = useTokens();\r\n  const { addToast } = useToasts();\r\n  const [suppliers, setSuppliers] = useState([]);\r\n\r\n  /* ------------------------------- Adding New ------------------------------- */\r\n  const [newSupplierName, setNewSupplierName] = useState(\"\");\r\n  const [newSupplierContactName, setNewSupplierContactName] = useState(\"\");\r\n  const [newSupplierPhone, setNewSupplierPhone] = useState(\"\");\r\n  // const [newSupplierRating, setNewSupplierRating] = useState(\"\");\r\n\r\n  /* ------------------------------ Edit Exiting ------------------------------ */\r\n  const [rowToEdit, setRowToEdit] = useState(\"\");\r\n  const [editSupplierName, setEditSupplierName] = useState(\"\");\r\n  const [editSupplierContactName, setEditSupplierContactName] = useState(\"\");\r\n  const [editSupplierPhone, setEditSupplierPhone] = useState(\"\");\r\n  // const [editSupplierRating, setEditSupplierRating] = useState(\"\");\r\n\r\n  const retrieveSuppliers = async () => {\r\n    try {\r\n      const array = await getSuppliers(token);\r\n      setSuppliers(array);\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddSupplier = async () => {\r\n    try {\r\n      const body = {\r\n        newSupplierName,\r\n        newSupplierContactName,\r\n        newSupplierPhone,\r\n      };\r\n      await newSupplier(body, token);\r\n      clearEntry();\r\n      retrieveSuppliers();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Supplier added\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditSupplier = async (id) => {\r\n    try {\r\n      const body = {\r\n        editSupplierName,\r\n        editSupplierContactName,\r\n        editSupplierPhone,\r\n      };\r\n      await editSupplier(id, body, token);\r\n      retrieveSuppliers();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Supplier updated\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteSupplier = async (supplierID) => {\r\n    try {\r\n      await deleteSupplier(supplierID, token);\r\n      setSuppliers(\r\n        suppliers.filter((supplier) => supplier.supplier_id !== supplierID)\r\n      );\r\n      retrieveSuppliers();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Supplier deleted\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearEntry = () => {\r\n    setNewSupplierName(\"\");\r\n    setNewSupplierContactName(\"\");\r\n    setNewSupplierPhone(\"\");\r\n  };\r\n\r\n  const clearEdit = () => {\r\n    setEditSupplierContactName(\"\");\r\n    setEditSupplierName(\"\");\r\n    setEditSupplierPhone(\"\");\r\n    // setEditSupplierRating(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveSuppliers();\r\n  }, [rowToEdit]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <AppNav></AppNav>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-xxl mb-5\">\r\n        <div className=\"row shadow rounded-3 bg-white px-4\">\r\n          <h1 className=\"my-3\">Supplier Manager</h1>\r\n          <div className=\"row row-cols-5 gx-1 mt-4\">\r\n            <HeaderColumn display={\"col-4\"} headerText={\"Supplier Name\"} />\r\n            <HeaderColumn display={\"col-3\"} headerText={\"Contact Name\"} />\r\n            <HeaderColumn display={\"col-3\"} headerText={\"Contact Phone\"} />\r\n            {/* <HeaderColumn display={\"col-2\"} headerText={\"Supplier Rating\"} /> */}\r\n            <HeaderColumn display={\"col-2\"} headerText={\"\"} />\r\n          </div>\r\n\r\n          <div className=\"row row-cols-6 border-bottom py-2 mb-2 gx-2\">\r\n            <EditColumn\r\n              display={\"col-4\"}\r\n              type={\"text\"}\r\n              label={\"Name\"}\r\n              newValue={newSupplierName}\r\n              setNewValue={setNewSupplierName}\r\n              placeholder={\"Supplier Name\"}\r\n            />\r\n            <EditColumn\r\n              display={\"col-3\"}\r\n              type={\"text\"}\r\n              label={\"Contact\"}\r\n              newValue={newSupplierContactName}\r\n              setNewValue={setNewSupplierContactName}\r\n              placeholder={\"Contact Name\"}\r\n            />\r\n            <EditColumn\r\n              display={\"col-3\"}\r\n              label={\"Tel\"}\r\n              type={\"tel\"}\r\n              newValue={newSupplierPhone}\r\n              setNewValue={setNewSupplierPhone}\r\n              placeholder={\"000-000-0000\"}\r\n            />\r\n\r\n            <div className=\"col-2 text-center d-grid\">\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={handleAddSupplier}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* --------------------------- Enumerated Existing -------------------------- */}\r\n          {!_.isEmpty(suppliers) &&\r\n            suppliers.map((supplier) => {\r\n              return supplier.supplier_id !== rowToEdit ? (\r\n                <div\r\n                  className=\"row row-cols-5 border-bottom py-2 gx-2 highlight\"\r\n                  key={supplier.supplier_id}\r\n                >\r\n                  <DisplayColumn\r\n                    display={\"col-4\"}\r\n                    content={supplier.supplier_name}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-3\"}\r\n                    content={supplier.contact_name}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-3\"}\r\n                    content={supplier.supplier_phone}\r\n                  />\r\n                  <ButtonsColumn\r\n                    display={\"col-2 text-center d-grid\"}\r\n                    ID={supplier.supplier_id}\r\n                    handleDeleteResource={handleDeleteSupplier}\r\n                    setRowToEdit={setRowToEdit}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"row row-cols-5 border-bottom py-2 mb-2 gx-2\"\r\n                  key={supplier.supplier_id}\r\n                >\r\n                  <EditColumn\r\n                    display={\"col-4\"}\r\n                    type={\"text\"}\r\n                    label={\"Name\"}\r\n                    newValue={editSupplierName}\r\n                    setNewValue={setEditSupplierName}\r\n                    placeholder={\"Supplier Name\"}\r\n                    currentState={supplier.supplier_name}\r\n                  />\r\n                  <EditColumn\r\n                    display={\"col-3\"}\r\n                    type={\"text\"}\r\n                    label={\"Contact\"}\r\n                    newValue={editSupplierContactName}\r\n                    setNewValue={setEditSupplierContactName}\r\n                    placeholder={\"Contact Name\"}\r\n                    currentState={supplier.contact_name}\r\n                  />\r\n                  <EditColumn\r\n                    display={\"col-3\"}\r\n                    type={\"tel\"}\r\n                    label={\"Tel\"}\r\n                    newValue={editSupplierPhone}\r\n                    setNewValue={setEditSupplierPhone}\r\n                    placeholder={\"000-000-0000\"}\r\n                    pattern={\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"}\r\n                    maxlength={10}\r\n                    minlength={10}\r\n                    currentState={supplier.supplier_phone}\r\n                  />\r\n\r\n                  <ButtonAcceptColumn\r\n                    display={\"col-2 d-grid\"}\r\n                    setRowToEdit={setRowToEdit}\r\n                    resourceID={supplier.supplier_id}\r\n                    editHandler={handleEditSupplier}\r\n                    clearEdit={clearEdit}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          {/* ----------------------------------- End ---------------------------------- */}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagerSuppliers;\r\n","const URL_SERVER = process.env.REACT_APP_URL;\r\n\r\nexport const deleteMaterial = async (materialID, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/material/${materialID}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(response.json());\r\n    }\r\n  } catch (err) {\r\n    if ((err.errorCode = \"23503\")) {\r\n      throw new Error(\r\n        \"Could not delete the material because it is referenced in an existing transaction\"\r\n      );\r\n    } else {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n  }\r\n};\r\n\r\n//Use this model!\r\nexport const editMaterial = async (materialID, body, token) => {\r\n  try {\r\n    const response = await fetch(`${URL_SERVER}/material/edit/${materialID}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(response.json());\r\n    }\r\n  } catch (err) {\r\n    console.error(err.message);\r\n    throw new Error(\"Failed to edit material\");\r\n  }\r\n};\r\n","import { React, Fragment, useState, useEffect } from \"react\";\r\nimport AppNav from \"./AppNav\";\r\nimport HeaderColumn from \"./elements/HeaderColumn\";\r\nimport DisplayColumn from \"./elements/DisplayColumn\";\r\nimport ButtonsColumn from \"./elements/ButtonsColumn\";\r\nimport ButtonAcceptColumn from \"./elements/ButtonAcceptColumn\";\r\nimport EditColumn from \"./elements/EditColumn\";\r\nimport { getMaterials } from \"../middleware/ProductHasMaterialUtils\";\r\nimport { deleteMaterial, editMaterial } from \"../middleware/MaterialUtils\";\r\nimport { newMaterial } from \"../middleware/ProductHasMaterialUtils\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\nimport Navbar from \"./Navbar\";\r\nimport _ from \"lodash\";\r\n\r\nconst ManagerMaterials = () => {\r\n  const { token } = useTokens();\r\n  const { addToast } = useToasts();\r\n  const [materials, setMaterials] = useState([]);\r\n  /* ------------------------------ New Material ------------------------------ */\r\n  const [newMaterialName, setNewMaterialName] = useState(\"\");\r\n  const [newMaterialDescription, setNewMaterialDescription] = useState(\"\");\r\n\r\n  /* ------------------------------ Edit Existing ----------------------------- */\r\n  const [rowToEdit, setRowToEdit] = useState(\"\");\r\n  const [editMaterialName, setEditMaterialName] = useState(\"\");\r\n  const [editMaterialDescription, setEditMaterialDescription] = useState(\"\");\r\n\r\n  const clearEdit = () => {\r\n    setEditMaterialName(\"\");\r\n    setEditMaterialDescription(\"\");\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setNewMaterialName(\"\");\r\n    setNewMaterialDescription(\"\");\r\n  };\r\n\r\n  const handleEditMaterial = async (id) => {\r\n    const body = {\r\n      editMaterialName,\r\n      editMaterialDescription,\r\n    };\r\n    await editMaterial(id, body, token);\r\n    retrieveMaterials();\r\n  };\r\n\r\n  const retrieveMaterials = async () => {\r\n    try {\r\n      const array = await getMaterials(token);\r\n      setMaterials(array);\r\n    } catch (err) {\r\n      addToast({\r\n        title: \"Failed to load materials\",\r\n        type: \"Error\",\r\n        body: \"Failed to edit material\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddMaterial = async () => {\r\n    try {\r\n      const body = {\r\n        newMaterialName,\r\n        newMaterialDescription,\r\n      };\r\n      await newMaterial(body, token);\r\n      clearInput();\r\n      retrieveMaterials();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Successfully added material\",\r\n      });\r\n    } catch (err) {\r\n      addToast({\r\n        title: \"Failed to add material\",\r\n        type: \"Error\",\r\n        body: err.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteMaterial = async (materialID) => {\r\n    try {\r\n      await deleteMaterial(materialID, token);\r\n      setMaterials(\r\n        materials.filter((material) => material.material_id !== materialID)\r\n      );\r\n    } catch (err) {\r\n      addToast({\r\n        title: \"Failed to delete material\",\r\n        type: \"Error\",\r\n        body: err.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveMaterials();\r\n  }, [rowToEdit]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <AppNav></AppNav>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-xxl mb-5\">\r\n        <div className=\"row shadow rounded-3 bg-white px-4\">\r\n          <h1 className=\"my-3\">Material Manager</h1>\r\n          <div className=\"row row-cols-5 gx-1 mt-4\">\r\n            <HeaderColumn display={\"col-5\"} headerText={\"Material Name\"} />\r\n            <HeaderColumn\r\n              display={\"col-5\"}\r\n              headerText={\"Material Description\"}\r\n            />\r\n            <HeaderColumn display={\"col-2\"} headerText={\"\"} />\r\n          </div>\r\n\r\n          <div className=\"row row-cols-3 border-bottom py-2 mb-2 gx-2\">\r\n            <EditColumn\r\n              display={\"col-5\"}\r\n              type={\"text\"}\r\n              label={\"Name\"}\r\n              newValue={newMaterialName}\r\n              setNewValue={setNewMaterialName}\r\n              placeholder={\"Material Name\"}\r\n            />\r\n            <EditColumn\r\n              display={\"col-5\"}\r\n              type={\"text\"}\r\n              label={\"Description\"}\r\n              newValue={newMaterialDescription}\r\n              setNewValue={setNewMaterialDescription}\r\n              placeholder={\"Description\"}\r\n            />\r\n\r\n            <div className=\"col-2 text-center d-grid\">\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={handleAddMaterial}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* --------------------------- Enumerated Existing -------------------------- */}\r\n          {!_.isEmpty(materials) &&\r\n            materials.map((material) => {\r\n              return material.material_id !== rowToEdit ? (\r\n                <div\r\n                  className=\"row row-cols-3 border-bottom py-2 gx-2 highlight\"\r\n                  key={material.material_id}\r\n                >\r\n                  <DisplayColumn\r\n                    display={\"col-5\"}\r\n                    content={material.material_name}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-5\"}\r\n                    content={material.material_description}\r\n                  />\r\n                  <ButtonsColumn\r\n                    display={\"col-2 text-center d-grid\"}\r\n                    ID={material.material_id}\r\n                    handleDeleteResource={handleDeleteMaterial}\r\n                    setRowToEdit={setRowToEdit}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"row row-cols-5 border-bottom py-2 mb-2 gx-2\"\r\n                  key={material.material_id}\r\n                >\r\n                  <EditColumn\r\n                    display={\"col-5\"}\r\n                    type={\"text\"}\r\n                    label={\"Name\"}\r\n                    newValue={editMaterialName}\r\n                    setNewValue={setEditMaterialName}\r\n                    placeholder={\"Material Name\"}\r\n                    currentState={material.material_name}\r\n                  />\r\n                  <EditColumn\r\n                    display={\"col-5\"}\r\n                    type={\"text\"}\r\n                    label={\"Description\"}\r\n                    newValue={editMaterialDescription}\r\n                    setNewValue={setEditMaterialDescription}\r\n                    placeholder={\"Material Description\"}\r\n                    currentState={material.material_description}\r\n                  />\r\n                  <ButtonAcceptColumn\r\n                    display={\"col-2 d-grid\"}\r\n                    setRowToEdit={setRowToEdit}\r\n                    resourceID={material.material_id}\r\n                    editHandler={handleEditMaterial}\r\n                    clearEdit={clearEdit}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          {/* ----------------------------------- End ---------------------------------- */}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagerMaterials;\r\n","import { React, Fragment, useState, useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport AppNav from \"./AppNav\";\r\nimport HeaderColumn from \"./elements/HeaderColumn\";\r\nimport DisplayColumn from \"./elements/DisplayColumn\";\r\nimport ButtonsColumn from \"./elements/ButtonsColumn\";\r\nimport EditColumn from \"./elements/EditColumn\";\r\nimport InputCost from \"./elements/InputCost\";\r\nimport SelectColumn from \"./elements/SelectColumn\";\r\nimport ButtonAcceptColumn from \"./elements/ButtonAcceptColumn\";\r\nimport Navbar from \"./Navbar\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  getMaterials,\r\n  getUnits,\r\n  getSuppliers,\r\n} from \"../middleware/ProductHasMaterialUtils\";\r\nimport {\r\n  getTransactionData,\r\n  deleteTransaction,\r\n  newTransaction,\r\n  editTransaction,\r\n} from \"../middleware/TransactionUtils\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\nimport { useTokens } from \"../contexts/UserContext\";\r\n\r\nconst TransactionManager = () => {\r\n  const { token } = useTokens();\r\n  const { addToast } = useToasts();\r\n  const todayDate = new Date().toISOString().split(\"T\")[0];\r\n  /* ----------------------------- New Transaction ---------------------------- */\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [newTransactionMaterial, setNewTransactionMaterial] = useState(\"\");\r\n  const [newTransactionSupplier, setNewTransactionSupplier] = useState(\"\");\r\n  const [newTransactionUnit, setNewTransactionUnit] = useState(\"1\");\r\n  const [newTransactionQuantity, setNewTransactionQuantity] = useState(\"0\");\r\n  const [newTransactionCost, setNewTransactionCost] = useState(\"0.00\");\r\n  const [newTransactionDate, setNewTransactionDate] = useState(todayDate);\r\n  /* ---------------------------- Edit Transactions --------------------------- */\r\n  const [editTransactionMaterial, setEditTransactionMaterial] = useState(\"\");\r\n  const [editTransactionSupplier, setEditTransactionSupplier] = useState(\"\");\r\n  const [editTransactionUnit, setEditTransactionUnit] = useState(\"\");\r\n  const [editTransactionQuantity, setEditTransactionQuantity] = useState(\"\");\r\n  const [editTransactionCost, setEditTransactionCost] = useState(\"\");\r\n  const [editTransactionDate, setEditTransactionDate] = useState(\"\");\r\n\r\n  /* -------------------------------- Options -------------------------------- */\r\n  const [materials, setMaterials] = useState([]);\r\n  const [units, setUnits] = useState([]);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  /* -------------------------------- Utilities ------------------------------- */\r\n  const [rowToEdit, setRowToEdit] = useState(\"\");\r\n\r\n  const loadLists = async () => {\r\n    try {\r\n      const materialList = await getMaterials(token);\r\n      setMaterials(materialList);\r\n      !_.isEmpty(materialList) &&\r\n        setNewTransactionMaterial(materialList[0].material_id);\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n    try {\r\n      const unitList = await getUnits(token);\r\n      setUnits(unitList);\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n\r\n    try {\r\n      const supplierList = await getSuppliers(token);\r\n      setSuppliers(supplierList);\r\n      !_.isEmpty(supplierList) &&\r\n        setNewTransactionSupplier(supplierList[0].supplier_id);\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const retrieveTransactions = async () => {\r\n    try {\r\n      const array = await getTransactionData(token);\r\n      setTransactions(array);\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddTransaction = async () => {\r\n    try {\r\n      const body = {\r\n        newTransactionDate,\r\n        newTransactionMaterial,\r\n        newTransactionSupplier,\r\n        newTransactionUnit,\r\n        newTransactionCost,\r\n        newTransactionQuantity,\r\n      };\r\n      clearNew();\r\n      await newTransaction(body, token);\r\n      retrieveTransactions();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Transaction added\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditTransaction = async (id) => {\r\n    try {\r\n      const body = {\r\n        editTransactionMaterial,\r\n        editTransactionSupplier,\r\n        editTransactionUnit,\r\n        editTransactionCost,\r\n        editTransactionQuantity,\r\n        editTransactionDate,\r\n      };\r\n      await editTransaction(id, body, token);\r\n      retrieveTransactions();\r\n      clearEdit();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Transaction updated\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteTransaction = async (transactionID) => {\r\n    try {\r\n      await deleteTransaction(transactionID, token);\r\n      setTransactions(\r\n        transactions.filter(\r\n          (transaction) => transaction.transaction_id !== transactionID\r\n        )\r\n      );\r\n      retrieveTransactions();\r\n      addToast({\r\n        title: \" Success\",\r\n        type: \"Success\",\r\n        body: \"Transaction deleted\",\r\n      });\r\n    } catch (error) {\r\n      addToast({\r\n        title: \" Database Error\",\r\n        type: \"Error\",\r\n        body: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearEdit = () => {\r\n    setEditTransactionCost(\"\");\r\n    setEditTransactionDate(\"\");\r\n    setEditTransactionMaterial(\"\");\r\n    setEditTransactionQuantity(\"\");\r\n    setEditTransactionSupplier(\"\");\r\n    setEditTransactionUnit(\"\");\r\n  };\r\n\r\n  const clearNew = () => {\r\n    setNewTransactionCost(\"0.00\");\r\n    setNewTransactionDate(todayDate);\r\n    setNewTransactionMaterial(\"\");\r\n    setNewTransactionQuantity(\"0\");\r\n    setNewTransactionSupplier(\"\");\r\n    setNewTransactionUnit(\"1\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLists();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    retrieveTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar opacity={\"nav-opaque\"} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <AppNav></AppNav>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-xxl mb-5\">\r\n        <div className=\"row shadow rounded-3 bg-white px-4\">\r\n          <h1 className=\"my-3\">Transaction Manager</h1>\r\n          <div className=\"row row-cols-7 gx-1 mt-4\">\r\n            <HeaderColumn display={\"col-2\"} headerText={\"Transaction Date\"} />\r\n            <HeaderColumn display={\"col-2\"} headerText={\"Material\"} />\r\n            <HeaderColumn display={\"col-2\"} headerText={\"Supplier\"} />\r\n            <HeaderColumn display={\"col-1\"} headerText={\"Quantity\"} />\r\n            <HeaderColumn display={\"col-2\"} headerText={\"Unit\"} />\r\n            <HeaderColumn display={\"col-1\"} headerText={\"Total Cost\"} />\r\n            <HeaderColumn display={\"col-2\"} headerText={\"\"} />\r\n          </div>\r\n\r\n          <div className=\"row row-cols-6 border-bottom py-2 mb-2 gx-2\">\r\n            <EditColumn\r\n              display={\"col-2\"}\r\n              type={\"date\"}\r\n              label={\"Date\"}\r\n              newValue={newTransactionDate}\r\n              setNewValue={setNewTransactionDate}\r\n              placeholder={\"Transaction Date\"}\r\n            />\r\n            <SelectColumn\r\n              display={\"col-2\"}\r\n              label={\"Material\"}\r\n              list={materials}\r\n              itemkey={\"material_name\"}\r\n              id={\"material_id\"}\r\n              // currentState={materials[0].material_id}\r\n              newValue={newTransactionMaterial}\r\n              setNewValue={setNewTransactionMaterial}\r\n            />\r\n            <SelectColumn\r\n              display={\"col-2\"}\r\n              // id={\"selectSupplier\"}\r\n              label={\"Supplier\"}\r\n              list={suppliers}\r\n              itemkey={\"supplier_name\"}\r\n              id={\"supplier_id\"}\r\n              // currentState={suppliers[0].supplier_id}\r\n              newValue={newTransactionSupplier}\r\n              setNewValue={setNewTransactionSupplier}\r\n            />\r\n            <EditColumn\r\n              display={\"col-1\"}\r\n              type={\"number\"}\r\n              label={\"Quantity\"}\r\n              min={0}\r\n              newValue={newTransactionQuantity}\r\n              setNewValue={setNewTransactionQuantity}\r\n              placeholder={\"0\"}\r\n            />\r\n            <SelectColumn\r\n              display={\"col-2\"}\r\n              // id={\"selectUnit\"}\r\n              label={\"Unit\"}\r\n              list={units}\r\n              itemkey={\"unit_name\"}\r\n              id={\"unit_id\"}\r\n              currentState={1}\r\n              newValue={newTransactionUnit}\r\n              setNewValue={setNewTransactionUnit}\r\n            />\r\n\r\n            <InputCost\r\n              display={\"col-2\"}\r\n              value={newTransactionCost}\r\n              setter={setNewTransactionCost}\r\n            />\r\n\r\n            <div className=\"col-1 text-center d-grid\">\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={handleAddTransaction}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* --------------------------- Enumerated Existing -------------------------- */}\r\n          {!_.isEmpty(transactions) &&\r\n            transactions.map((transaction) => {\r\n              return transaction.transaction_id !== rowToEdit ? (\r\n                <div\r\n                  className=\"row row-cols-5 border-bottom py-2 gx-2 highlight\"\r\n                  key={transaction.transaction_id}\r\n                >\r\n                  <DisplayColumn\r\n                    display={\"col-2 text-center\"}\r\n                    content={dayjs(transaction.transaction_date).format(\r\n                      \"MMM D, YYYY\"\r\n                    )}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-2 \"}\r\n                    content={transaction.material_name}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-2 \"}\r\n                    content={transaction.supplier_name}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-1 text-center\"}\r\n                    content={transaction.quantity}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-2 text-center\"}\r\n                    content={transaction.unit_name}\r\n                  />\r\n                  <DisplayColumn\r\n                    display={\"col-2 text-center\"}\r\n                    content={transaction.cost}\r\n                  />\r\n                  <ButtonsColumn\r\n                    display={\"col-1 d-grid\"}\r\n                    ID={transaction.transaction_id}\r\n                    handleDeleteResource={handleDeleteTransaction}\r\n                    setRowToEdit={setRowToEdit}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"row row-cols-6 border-bottom py-2 gx-2\">\r\n                  <EditColumn\r\n                    display={\"col-2\"}\r\n                    type={\"date\"}\r\n                    label={\"Date\"}\r\n                    currentState={dayjs(transaction.transaction_date).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    newValue={editTransactionDate}\r\n                    setNewValue={setEditTransactionDate}\r\n                    placeholder={\"Transaction Name\"}\r\n                  />\r\n                  <SelectColumn\r\n                    display={\"col-2\"}\r\n                    label={\"Material\"}\r\n                    list={materials}\r\n                    itemkey={\"material_name\"}\r\n                    id={\"material_id\"}\r\n                    currentState={transaction.material_id}\r\n                    newValue={editTransactionMaterial}\r\n                    setNewValue={setEditTransactionMaterial}\r\n                  />\r\n                  <SelectColumn\r\n                    display={\"col-2\"}\r\n                    label={\"Supplier\"}\r\n                    list={suppliers}\r\n                    itemkey={\"supplier_name\"}\r\n                    id={\"supplier_id\"}\r\n                    currentState={transaction.supplier_id}\r\n                    newValue={editTransactionSupplier}\r\n                    setNewValue={setEditTransactionSupplier}\r\n                  />\r\n                  <EditColumn\r\n                    display={\"col-1\"}\r\n                    type={\"number\"}\r\n                    label={\"Quantity\"}\r\n                    min={0}\r\n                    currentState={transaction.quantity}\r\n                    newValue={editTransactionQuantity}\r\n                    setNewValue={setEditTransactionQuantity}\r\n                    placeholder={\"Qty\"}\r\n                  />\r\n                  <SelectColumn\r\n                    display={\"col-2\"}\r\n                    label={\"Unit\"}\r\n                    list={units}\r\n                    itemkey={\"unit_name\"}\r\n                    id={\"unit_id\"}\r\n                    currentState={transaction.unit_id}\r\n                    newValue={editTransactionUnit}\r\n                    setNewValue={setEditTransactionUnit}\r\n                  />\r\n\r\n                  <InputCost\r\n                    display={\"col-2\"}\r\n                    currentState={transaction.cost}\r\n                    value={editTransactionCost}\r\n                    setter={setEditTransactionCost}\r\n                  />\r\n\r\n                  <ButtonAcceptColumn\r\n                    display={\"col-1 text-center d-grid\"}\r\n                    setRowToEdit={setRowToEdit}\r\n                    resourceID={transaction.transaction_id}\r\n                    editHandler={handleEditTransaction}\r\n                    clearEdit={clearEdit}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          {/* ----------------------------------- End ---------------------------------- */}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TransactionManager;\r\n","import { useState, useEffect } from \"react\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\r\n// import { Transition } from \"react-transition-group\";\r\nimport { useToasts } from \"../contexts/ToastContext\";\r\n\r\nconst ToastManager = (props) => {\r\n  const { toasts } = useToasts();\r\n  const [toastsToShow, setToastsToShow] = useState(toasts);\r\n\r\n  useEffect(() => {\r\n    setToastsToShow(toasts);\r\n  }, [toasts]);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        className=\"p-3 z-super position-static\"\r\n        position=\"bottom-end\"\r\n      >\r\n        {toastsToShow.map((toast, i) => {\r\n          return (\r\n            <Toast\r\n              autohide\r\n              // delay={2000}\r\n              animation={\"true\"}\r\n              className={\"fader\"}\r\n              key={i}\r\n            >\r\n              <Toast.Header closeButton={false}>\r\n                {toast.type === \"Success\" ? (\r\n                  <i\r\n                    className=\"bi bi-hand-thumbs-up-fill text-success me-2\"\r\n                    style={{ fontSize: \"1.2rem\" }}\r\n                  ></i>\r\n                ) : (\r\n                  <i\r\n                    className=\"bi bi-exclamation-triangle-fill text-danger me-2\"\r\n                    style={{ fontSize: \"1.2rem\" }}\r\n                  ></i>\r\n                )}\r\n                <strong className=\"me-auto\"> {toast.title}</strong>\r\n                <small>{toast.type}</small>\r\n              </Toast.Header>\r\n              <Toast.Body>{toast.body}</Toast.Body>\r\n            </Toast>\r\n          );\r\n        })}\r\n      </ToastContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToastManager;\r\n","import { React, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Landing from \"./components/Landing\";\r\nimport About from \"./components/About\";\r\nimport Contact from \"./components/Contact\";\r\nimport Login from \"./components/Login\";\r\nimport Signup from \"./components/Signup\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport ManagerSuppliers from \"./components/ManagerSuppliers\";\r\nimport ManagerMaterials from \"./components/ManagerMaterials\";\r\nimport ManagerTransactions from \"./components/ManagerTransactions\";\r\nimport ToastManager from \"./components/ToastManager\";\r\nimport { ToastProvider } from \"./contexts/ToastContext\";\r\nimport { UserProvider } from \"./contexts/UserContext\";\r\nimport \"./styles/main.css\";\r\nimport \"./styles/Styles.css\";\r\nimport \"./styles/AppPage.css\";\r\n\r\n// import ProductProfile from \"./components/ProductProfile\";\r\n// import ProductHasMaterials from \"./components/ProductHasMaterials\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ToastManager />\r\n      {/* <ToastManager toastStack={toastStack} /> */}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Landing />} />\r\n        <Route path=\"about\" element={<About />} />\r\n        <Route path=\"contact\" element={<Contact />} />\r\n        <Route path=\"signup\" element={<Signup />} />\r\n        <Route path=\"login\" element={<Login />} />\r\n        <Route path=\"dashboard\" element={<Dashboard />} />\r\n        <Route path=\"suppliers\" element={<ManagerSuppliers />} />\r\n        <Route path=\"materials\" element={<ManagerMaterials />} />\r\n        <Route path=\"transactions\" element={<ManagerTransactions />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <ToastProvider>\r\n      <UserProvider>\r\n        <App />\r\n      </UserProvider>\r\n    </ToastProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}